import asyncio
import logging
from aiogram import Bot, Dispatcher, types, Router
from aiogram.filters import Command
import aiohttp

# üîπ –ó–ê–ú–ï–ù–ò –Ω–∞ —Å–≤–æ–π —Ç–æ–∫–µ–Ω!
TOKEN = "7866480501:AAEAqEtSoVfM-xj_y9-oT-_MNCsq-rmQeLQ"

# üîπ –£–∫–∞–∂–∏ URL —Å–≤–æ–µ–≥–æ –±–µ–∫–µ–Ω–¥–∞ (–ª–æ–∫–∞–ª—å–Ω–æ –∏–ª–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ)
BALANCE_API = "http://localhost:8000/balance/"  # –ò–ª–∏ —É–∫–∞–∂–∏ —Ä–µ–∞–ª—å–Ω—ã–π —Ö–æ—Å—Ç–∏–Ω–≥

# üîπ –°—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞–∑–∏–Ω–æ-–º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
CASINO_URL = "https://casino-webapp-1vc0j34xk-wsxs-projects-76072096.vercel.app"

# üîπ –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

# üîπ –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä
bot = Bot(token=TOKEN)
dp = Dispatcher()
router = Router()
dp.include_router(router)

# üîπ –ö–æ–º–∞–Ω–¥–∞ /start
@router.message(Command("start"))
async def start(message: types.Message):
    text = (
        "üé∞ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ö–∞–∑–∏–Ω–æ!\n\n"
        "üí∞ –ü—Ä–æ–≤–µ—Ä—å —Å–≤–æ–π –±–∞–ª–∞–Ω—Å: /balance\n"
        "üéÆ –ò–≥—Ä–∞—Ç—å –≤ –∫–∞–∑–∏–Ω–æ: [–ù–ê–ñ–ú–ò –°–Æ–î–ê]({})"
    ).format(CASINO_URL)
    
    await message.answer(text, parse_mode="Markdown", disable_web_page_preview=True)

# üîπ –ö–æ–º–∞–Ω–¥–∞ /balance
@router.message(Command("balance"))
async def get_balance(message: types.Message):
    user_id = message.from_user.id
    
    async with aiohttp.ClientSession() as session:
        async with session.get(f"{BALANCE_API}{user_id}") as response:
            if response.status == 200:
                data = await response.json()
                balance = data.get("balance", 0)
                await message.answer(f"üí∞ –í–∞—à –±–∞–ª–∞–Ω—Å: {balance} –º–æ–Ω–µ—Ç")
            else:
                await message.answer("‚ö† –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –±–∞–ª–∞–Ω—Å–∞. –ü—Ä–æ–≤–µ—Ä—å API.")

# üîπ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
